Loops with 'gets' within them react differently in mingw/msys/etc. vs Powershell.
In Powershell, they work as you would expect, however in msys they store the buffer until after the user has made all inputs.
This is the reason for the STDOUT.flush inclusions. This is also mentioned in the Github push.

There is no requirement to download or install additional gems as every gem used is default.
Bulk pushed data had requester_id and assignee_id overwritten when pulled.

When considering the most effective pagination method, first and foremost consideration was "The stated requirement says '‚óè Request all the tickets for your account'" however when considering the alternatives the option of "pull all the tickets and paginate on our end" was the more preferable option.
Primary reason: If there is 200 tickets, at 25 tickets per request, that is 8 requests versus 2 requests if pulling all at once (100 tickets per pull). This is a lower load on all concerned, the server and client.
Final decision: All tickets requested and stored on program launch to allow smooth running for the rest of the program.

Need to be even more mindful of security related issues in the future, such as passwords, API tokens etc. when pushing to a *public* Github.

Happy path tests throughout, testing that the correct class type is being passed through, which ensures the program is doing everything as it is supposed to.

Reminder to self:
Create a private key
openssl genrsa -out private.pem 2048
Create a matching public key
openssl rsa -in private.pem -out public.pem -outform PEM -pubout

Full JSON data:
url, id, external_id, via (channel, source(from/to), rel) created_at, updated_at, type, subject, raw_subject, description, priority, status, recipient, requester_id, submitter_id, assignee_id, organization_id, group_id, collaborator_ids, follower_ids, email_cc_ids, forum_topic_id, problem_id, has_incidents, is_public, due_at, tags, custom_fields, satisfaction_rating, sharing_agreement_ids, fields, followup_ids, ticket_form_id, brand_id, allow_channelback
